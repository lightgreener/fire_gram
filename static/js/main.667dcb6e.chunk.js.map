{"version":3,"sources":["components/Title.js","firebase/config.js","hooks/useStorage.js","components/ProgressBar.js","components/UploadForm.js","hooks/useFirestore.js","components/ImageGrid.js","components/Modal.js","components/App.js","reportWebVitals.js","index.js"],"names":["Title","className","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","console","log","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createAt","add","ProgressBar","setFile","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","layout","whileHover","opacity","onClick","img","src","alt","Initial","transition","delay","Modal","selectedImg","classList","contains","y","button","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.667dcb6e.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Title extends Component {\n    render () {\n        return(\n            <div className=\"title\">\n                <h1> Fire Gallery </h1>\n                <h2>your Pictures</h2>\n              \n            </div>\n        )\n    }\n}\n\n\nexport default Title\n","// import firebase from 'firebase/app';\nimport firebase from 'firebase'\n\nimport 'firebase/storage';\nimport 'firebase/firestore';\n\n// Your web app's Firebase configuration\n  const firebaseConfig = {\n    apiKey: \"AIzaSyAsbI-xsHKWpFET55J8H9xWAD5ANYuWzbg\",\n    authDomain: \"afternoon-firegram.firebaseapp.com\",\n    databaseURL: \"https://afternoon-firegram.firebaseio.com\",\n    projectId: \"afternoon-firegram\",\n    storageBucket: \"afternoon-firegram.appspot.com\",\n    messagingSenderId: \"326297334941\",\n    appId: \"1:326297334941:web:3cf5693b77a9241b795074\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  const database =firebase.database();\n\n  const projectStorage = firebase.storage();\n  const projectFirestore = firebase.firestore();\n  // const projectData = firebase.database();  //在这个是错误的，没有database（） 方法\n  // 下面 firebase 自己创建的时间邮票\n  const timestamp =firebase.firestore.FieldValue.serverTimestamp;\n\n  export { projectStorage,projectFirestore,timestamp,database};\n","import { useState, useEffect } from 'react'\nimport { projectStorage,projectFirestore,timestamp,database } from '../firebase/config'\n\nconst useStorage = (file) => {   //这个file 就是projectStorage里的\n    const [ progress, setProgress] = useState(0);\n    const [ error, setError] = useState(null);\n    const [ url, setUrl] = useState(null);\n    const [createAt,setCreateAt] = useState('');\n\n\n    useEffect(() => {\n        // references\n        // 先要得到该文件的名字。对文件进行操作\n        const storageRef = projectStorage.ref(file.name);\n        // 收集url 存储到image里， image 由firebase生产\n        const collectionRef = projectFirestore.collection('pic')\n        console.log(collectionRef);\n        // const collectionRef = database.ref('images'); // this is for realtime datatbase\n\n        //如果state_changed ，\n        storageRef.put(file).on('state_changed',(snap) =>{\n            let percentage = (snap.bytesTransferred /   snap.totalBytes) * 100;   // loading的百分比\n            setProgress(percentage);   //  看进度\n        },(err)=>{   // if error occurs\n            setError(err);\n        },async () => {    // promise\n            const url = await storageRef.getDownloadURL();\n            console.log('it is url: ' + url);\n            const createAt = timestamp(); //这里创建\n            collectionRef.add({url,createAt}) // 添加url ，并创建一个创建时间， 需要在config 里完成\n            // collectionRef.push({url:url,  //这里是realtime data\n                              // createAt:createAt，\n                              // pic_id:'34',\n                            // }); //不是方法\n            setUrl(url);\n            // setCreateAt(createAt);\n        })\n    },[file])  // 如果file 改变， 就执行前面的函数\n\n    return { progress, url, error }\n\n}\n\nexport default useStorage;\n","import React,{ useEffect }from 'react'\nimport useStorage from '../hooks/useStorage'\nimport {motion} from 'framer-motion'\n\nconst ProgressBar = ({file, setFile}) => {\n  const {url,progress} = useStorage(file);\n  // console.log(progress,url);  现在\n  // useEffect(() =>{}, [url]);   url 改变时， 执行前面的函数\nuseEffect(() =>{\n  if(url) {\n    setFile(null);  // 把进度条取消\n  }\n}, [url,setFile]);  // 我们用url 和 setFile\n\n\n\n  return (\n\n\n    <motion.div className=\"progress-bar\"\n      initial = {{width: 0}}\n      animate = {{width:progress + '%'}}\n      ></motion.div>\n   // {/* <div className=\"progress-bar\" style={{ width: progress + '%'}}></div>  这个也可以  */}\n  )\n}\n\nexport default ProgressBar;\n","import React, { useState } from 'react'\nimport ProgressBar from './ProgressBar'\n\nconst UploadForm = () => {\n\n    const [file, setFile] = useState( null );  //hook\n    const [error,setError] = useState( null ); // hook 错误信息\n\n    const types = ['image/png','image/jpeg'];\n\n    const _handleOnChange = (e) => {\n        console.log(\"working\");    //每次有变化，就会启动该项\n        let selected = e.target.files[0];  //只要一个文件\n        console.log(selected);   // 得到文件的信息\n\n        if (selected && types.includes(selected.type)) {   //检查选中的文件type是不是需要的\n            setFile(selected);\n            setError('');  // 如果是图片， 该error就不显示\n        } else {\n            setFile(null);\n            setError('please select an image file (png or jpeg)');// hard code 显示错误信息， 并且\n        }\n    }\n\n    return (\n       <form>\n           <label>\n               <input type =\"file\" onChange={ _handleOnChange} />\n               <span>+</span>\n           </label>\n           <div className='output'>\n               { error && <div className ='error'>{ error }</div>}\n               {/* 这里就是显示错误信息的地方， 如果没有错误信息，就显示下面的文件信息 */}\n               { file && <div>{ file.name }</div>}\n               {/*  这里显示进度条 */}\n               { file && < ProgressBar file={ file } setFile={setFile} />}\n           </div>\n       </form>\n    )\n}\n\nexport default UploadForm;\n","import { useState, useEffect } from 'react'\nimport { projectFirestore,database } from '../firebase/config'\n\n\nconst useFirestore = (collection) =>{\n  const [docs, setDocs] = useState([]);\n  useEffect(()=>{\n    const unsub = projectFirestore.collection(collection)\n    // database.collection(collection)\n      .orderBy('createAt','desc')\n      .onSnapshot((snap)=>{\n        let documents=[];  //\n        snap.forEach(doc =>{\n          documents.push({...doc.data(), id: doc.id});\n          // doc.data() 是cloud firestore 最后的url\n          // doc.id() . 是自动生产的ID\n        });\n        setDocs(documents);\n      });\n\n    return ()=> unsub();\n    // this is a cleanup function that react will run when\n    // a component using the hook unmounts\n\n  },[collection]);\n\n  return {docs};\n}\n\nexport default useFirestore;\n","import React from 'react'\nimport useFirestore from '../hooks/useFirestore'\nimport { motion } from 'framer-motion'\n\nconst ImageGrid = ({setSelectedImg})=>{\n  const {docs} = useFirestore('pic');\n  console.log(docs);\n  return(\n    <div className='img-grid'>\n      {docs && docs.map(doc =>(\n        <motion.div className='img-wrap' key={doc.id}\n          layout\n          whileHover={{opacity: 1}}    //\n          onClick={()=> setSelectedImg(doc.url)}    //tongshang\n          >\n          <motion.img src={doc.url} alt='uploaded' //tongshang\n            Initial={{ opacity: 0}}\n            animate= {{ opacity: 1}}\n            transition={{ delay: 1}}\n\n          />    {/*相同的url*/}\n        </motion.div>\n      ))}\n    </div>\n  )\n}\n\nexport default ImageGrid;\n","import React from 'react';\nimport {motion} from 'framer-motion'\nimport ImageGrid from './ImageGrid'\n\nconst Modal = ({selectedImg,setSelectedImg }) => {\n  const  _handleClick = (e)=>{\n    if(e.target.classList.contains('backdrop')){\n      setSelectedImg(null);\n    }\n\n  }\n\n  const _deleteButton = (e) => {\n    // e.preventDefault();\n      console.log(selectedImg);  // 可以得到\n      setSelectedImg(null);\n      console.log();\n\n  }\n\n  return(\n    <motion.div className='backdrop' onClick={_handleClick}\n      initial = {{ opacity: 0}}\n      animate = {{ opacity: 1}}\n      >\n      <motion.img  src={selectedImg} alt='enlarge pic'\n        initial = {{ y: '-50vh'}}\n        animate ={{ y: 0}}\n      />\n\n\n      <motion.button className='deleteBtn' onClick={ _deleteButton }\n        initial = {{ opacity:0}}\n        animate = {{ opacity:1}}\n        transition = {{ delay:1}}\n        >X</motion.button>\n    </motion.div>\n  )\n\n}\n\nexport default Modal ;\n","import React, { Component } from 'react'\nimport { useState, useEffect } from 'react'\nimport Title from './Title'\nimport UploadForm from './UploadForm'\nimport ImageGrid from './ImageGrid'\nimport Modal from './Modal'\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg}/>\n      {selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg}/> }   \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}